{
    "swagger": "2.0",
    "info": {
        "description": "CA2 was a school project on building Restfull services.",
        "version": "1.0.0",
        "title": "CA2",
        "termsOfService": "",
        "contact": {
            "email": ""
        },
        "license": {
            "name": "",
            "url": ""
        }
    },
    "host": "ca2-mrulle.rhcloud.com/ca2",
    "basePath": "/api/search",
    "tags": [{
        "name": "person",
        "description": "Restfull api",
        "externalDocs": {
            "description": "Visit us at ",
            "url": "http://ca2-mrulle.rhcloud.com/ca2"
        }
    }],
    "schemes": ["http"],
    "paths": {
        "/person": {
            "post": {
                "tags": ["person"],
                "summary": "Add a new person to the site",
                "description": "",
                "operationId": "addPerson",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "Person object that needs to be added to the site",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Person"
                    }
                }],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [{
                    "personstore_auth": ["write:persons", "read:persons"]
                }]
            }
        },
        "/person/id": {
            "put": {
                "tags": ["person"],
                "summary": "Update an existing person",
                "description": "",
                "operationId": "updatePerson",
                "consumes": ["application/json", "application/xml"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "Person object that needs to be added to the site",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Person"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Person not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },

                "security": [{
                    "personstore_auth": ["write:persons", "read:persons"]
                }]
            }
        },
        "/person/{personId}": {
            "get": {
                "tags": ["person"],
                "summary": "Find person by ID",
                "description": "Returns a single person",
                "operationId": "getPersonById",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "personId",
                    "in": "path",
                    "description": "ID of person to return",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Person not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": ["person"],
                "summary": "Deletes a person",
                "description": "",
                "operationId": "deletePerson",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "api_key",
                    "in": "header",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "personId",
                    "in": "path",
                    "description": "Person id to delete",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Person not found"
                    }
                },
                "security": [{
                    "personstore_auth": ["write:persons", "read:persons"]
                }]
            }
        }
    },
    "securityDefinitions": {
        "personstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://personstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:persons": "modify persons in your account",
                "read:persons": "read your persons"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "Person": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "name": {
                    "type": "string",
                    "example": "Test Name"
                },
                "lastName": {
                    "type": "string",
					"example": "Test lastName"
                }
            },
            "xml": {
                "name": "Person"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Visit us at ",
        "url": "http://ca2-mrulle.rhcloud.com/ca2"
    }
}